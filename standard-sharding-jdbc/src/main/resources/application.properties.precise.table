#precise分表设置
server.port=18080

spring.application.name = precise-standard-sharding-jdbc

server.servlet.context-path = /precise-standard-sharding-jdbc
spring.http.encoding.enabled = true
spring.http.encoding.charset = UTF-8
spring.http.encoding.force = true

# 打开sql输出日志
spring.shardingsphere.props.sql.show = true

mybatis.mapper-locations[0]=classpath:mapper/*.xml
mybatis.mapper-locations[1]=classpath*:com/**/mapper/*.xml

#swagger.enable = true

logging.level.root = info
logging.level.org.springframework.web = info
logging.level.com.zyj.sharding  = debug
logging.level.druid.sql = debug

spring.main.allow-bean-definition-overriding = true

mybatis.configuration.map-underscore-to-camel-case = true

# 定义数据源
spring.shardingsphere.datasource.names = db0,db1,db2,db3,dbx

spring.shardingsphere.datasource.db0.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db0.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.url = jdbc:mysql://localhost:3306/db_0?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.db0.username = root
spring.shardingsphere.datasource.db0.password = root

spring.shardingsphere.datasource.db1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db1.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.url = jdbc:mysql://localhost:3306/db_1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.db1.username = root
spring.shardingsphere.datasource.db1.password = root

spring.shardingsphere.datasource.db2.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db2.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.url = jdbc:mysql://localhost:3306/db_2?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.db2.username = root
spring.shardingsphere.datasource.db2.password = root

spring.shardingsphere.datasource.db3.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.db3.driver-class-name = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db3.url = jdbc:mysql://localhost:3306/db_3?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.db3.username = root
spring.shardingsphere.datasource.db3.password = root

# 配置数据源 db-x
spring.shardingsphere.datasource.dbx.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dbx.driverClassName = com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dbx.url=jdbc:mysql://localhost:3306/db_x?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.dbx.username=root
spring.shardingsphere.datasource.dbx.password=root

# 默认数据源，未分片的表默认执行库
spring.shardingsphere.sharding.default-data-source-name=dbx

# 指定t_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
# 指定t_order_item表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=item_id
spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE


### 分库策略
# 分库分片健
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.sharding-column=order_id
# 分库分片算法
spring.shardingsphere.sharding.tables.t_order.database-strategy.standard.precise-algorithm-class-name=com.zyj.sharding.algorithm.DbPreciseShardingAlgorithm
# 分表分片健
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes: db$->{0..3}.t_order_$->{0..2}
#spring.shardingsphere.sharding.tables.t_order.actual-data-nodes: t_order_$->{0..2}
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
# 分表分片算法
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.zyj.sharding.algorithm.TablePreciseShardingAlgorithm


# 分库分片健
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.standard.sharding-column=order_id
# 分库分片算法
spring.shardingsphere.sharding.tables.t_order_item.database-strategy.standard.precise-algorithm-class-name=com.zyj.sharding.algorithm.DbPreciseShardingAlgorithm
# 分表分片健
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes: db$->{0..3}.t_order_item_$->{0..2}
#spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes: t_order_item_$->{0..2}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
# 分表分片算法
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.standard.precise-algorithm-class-name=com.zyj.sharding.algorithm.TablePreciseShardingAlgorithm
